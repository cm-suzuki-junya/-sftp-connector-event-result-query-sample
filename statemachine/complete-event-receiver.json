{
    "Comment": "SFTP connector omplete event receiver",
    "StartAt": "UpdateStatus",
    "States": {
      "UpdateStatus": {
        "Type": "Task",
        "Resource": "arn:aws:states:::dynamodb:updateItem",
        "Parameters": {
          "TableName": "${StatusTableName}",
          "Key": {
            "FilePath": {
              "S.$": "$.detail.file-path"
            }
          },
          "UpdateExpression": "SET TransferStatus = :InputStatus",
          "ExpressionAttributeValues": {
            ":InputStatus": {
              "S.$": "$.detail.status-code"
            }
          }
        },
        "Next": "Query",
        "ResultPath": null
      },
      "Query": {
        "Type": "Task",
        "Parameters": {
          "TableName": "${StatusTableName}",
          "IndexName": "${DBIndexName}",
          "KeyConditionExpression": "TransferStatus = :target_status",
          "ExpressionAttributeValues": {
            ":target_status": {
              "S": "IN_PROGRESS"
            }
          }
        },
        "Resource": "arn:aws:states:::aws-sdk:dynamodb:query",
        "Next": "ReceiveMessage"
      },
      "ReceiveMessage": {
        "Type": "Task",
        "Next": "Choice",
        "Parameters": {
          "QueueUrl": "${QueueUrl}"
        },
        "ResultPath": "$.ReceivedMessage",
        "Resource": "arn:aws:states:::aws-sdk:sqs:receiveMessage"
      },
      "Choice": {
        "Type": "Choice",
        "Choices": [
          {
            "Variable": "$.ReceivedMessage.Messages",
            "IsPresent": true,
            "Next": "StartFileTransfer"
          }
        ],
        "Default": "Include NOT_COMPLETE?"
      },
      "StartFileTransfer": {
        "Type": "Task",
        "Next": "DeleteMessage",
        "Parameters": {
          "ConnectorId": "${ConnectorId}",
          "RetrieveFilePaths.$": "States.Array($.ReceivedMessage.Messages[0].Body)",
          "LocalDirectoryPath": "/${BucketName}/${S3Path}"
        },
        "Resource": "arn:aws:states:::aws-sdk:transfer:startFileTransfer",
        "ResultPath": null
      },
      "DeleteMessage": {
        "Type": "Task",
        "End": true,
        "Parameters": {
          "QueueUrl": "${QueueUrl}",
          "ReceiptHandle.$": "$.ReceivedMessage.Messages[0].ReceiptHandle"
        },
        "Resource": "arn:aws:states:::aws-sdk:sqs:deleteMessage"
      },
      "Include NOT_COMPLETE?": {
        "Type": "Choice",
        "Choices": [
          {
            "Variable": "$.Count",
            "NumericEquals": 0,
            "Next": "StartQueryExecution"
          }
        ],
        "Default": "Pass"
      },
      "StartQueryExecution": {
        "Type": "Task",
        "Resource": "arn:aws:states:::athena:startQueryExecution",
        "Parameters": {
          "QueryExecutionContext": {
            "Catalog": "awsdatacatalog",
            "Database": "${GlueDBName}"
          },
          "QueryString": "SELECT Count(id) as DataCount FROM ${GlueTablename}",
          "WorkGroup": "${AthenaWorkGroup}"
        },
        "End": true
      },
      "Pass": {
        "Type": "Pass",
        "End": true
      }
    }
  }